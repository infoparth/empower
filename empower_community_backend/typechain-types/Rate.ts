/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface RateInterface extends utils.Interface {
  contractName: "Rate";
  functions: {
    "DTI()": FunctionFragment;
    "changeDeployer(address)": FunctionFragment;
    "deployer()": FunctionFragment;
    "name()": FunctionFragment;
    "owner()": FunctionFragment;
    "rateOfInterest()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "retrieveDTI()": FunctionFragment;
    "retrieveLTV()": FunctionFragment;
    "retrieveRate()": FunctionFragment;
    "retrieveTotalAllowableFunds()": FunctionFragment;
    "retrieveTotalLoansDisbursed()": FunctionFragment;
    "retrieveTotalPreApprovedLoans()": FunctionFragment;
    "s_LTV()": FunctionFragment;
    "totalAllowableFunds()": FunctionFragment;
    "totalLoansDisbursed()": FunctionFragment;
    "totalPreApprovedLoans()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "updateDTI(uint64)": FunctionFragment;
    "updateLTV(uint32)": FunctionFragment;
    "updateRate(uint32)": FunctionFragment;
    "updateTotalAllowableFunds(uint256)": FunctionFragment;
    "updateTotalLoansDisbursed(uint128)": FunctionFragment;
    "updateTotalPreApprovedLoans(uint128)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "DTI", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "changeDeployer",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "deployer", values?: undefined): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "rateOfInterest",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "retrieveDTI",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "retrieveLTV",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "retrieveRate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "retrieveTotalAllowableFunds",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "retrieveTotalLoansDisbursed",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "retrieveTotalPreApprovedLoans",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "s_LTV", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "totalAllowableFunds",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalLoansDisbursed",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalPreApprovedLoans",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateDTI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateLTV",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTotalAllowableFunds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTotalLoansDisbursed",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTotalPreApprovedLoans",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "DTI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeDeployer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deployer", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "rateOfInterest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retrieveDTI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retrieveLTV",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retrieveRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retrieveTotalAllowableFunds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retrieveTotalLoansDisbursed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retrieveTotalPreApprovedLoans",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "s_LTV", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalAllowableFunds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalLoansDisbursed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalPreApprovedLoans",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "updateDTI", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "updateLTV", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "updateRate", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updateTotalAllowableFunds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTotalLoansDisbursed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTotalPreApprovedLoans",
    data: BytesLike
  ): Result;

  events: {
    "DTIChanged(uint64,uint64)": EventFragment;
    "DeployerChanged(address,address)": EventFragment;
    "LTVChanged(uint32,uint32)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "RateChanged(uint32,uint32)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DTIChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DeployerChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LTVChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RateChanged"): EventFragment;
}

export type DTIChangedEvent = TypedEvent<
  [BigNumber, BigNumber],
  { newDTI: BigNumber; oldDTI: BigNumber }
>;

export type DTIChangedEventFilter = TypedEventFilter<DTIChangedEvent>;

export type DeployerChangedEvent = TypedEvent<
  [string, string],
  { previousDeployer: string; newDeployer: string }
>;

export type DeployerChangedEventFilter = TypedEventFilter<DeployerChangedEvent>;

export type LTVChangedEvent = TypedEvent<
  [number, number],
  { newLTI: number; oldLTI: number }
>;

export type LTVChangedEventFilter = TypedEventFilter<LTVChangedEvent>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export type RateChangedEvent = TypedEvent<
  [number, number],
  { _newrateOfInterest: number; oldrateOfInterest: number }
>;

export type RateChangedEventFilter = TypedEventFilter<RateChangedEvent>;

export interface Rate extends BaseContract {
  contractName: "Rate";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: RateInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DTI(overrides?: CallOverrides): Promise<[BigNumber]>;

    changeDeployer(
      _newDeployer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    deployer(overrides?: CallOverrides): Promise<[string]>;

    name(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    rateOfInterest(overrides?: CallOverrides): Promise<[number]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    retrieveDTI(overrides?: CallOverrides): Promise<[BigNumber]>;

    retrieveLTV(overrides?: CallOverrides): Promise<[number]>;

    retrieveRate(overrides?: CallOverrides): Promise<[number]>;

    retrieveTotalAllowableFunds(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    retrieveTotalLoansDisbursed(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    retrieveTotalPreApprovedLoans(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    s_LTV(overrides?: CallOverrides): Promise<[number]>;

    totalAllowableFunds(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalLoansDisbursed(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalPreApprovedLoans(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateDTI(
      _newDTI: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateLTV(
      _newLTV: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateRate(
      _newrateOfInterest: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateTotalAllowableFunds(
      _newTotalAllowableFunds: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateTotalLoansDisbursed(
      _newTotalLoansDisbursed: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateTotalPreApprovedLoans(
      _newTotalPreApprovedLoans: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  DTI(overrides?: CallOverrides): Promise<BigNumber>;

  changeDeployer(
    _newDeployer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  deployer(overrides?: CallOverrides): Promise<string>;

  name(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  rateOfInterest(overrides?: CallOverrides): Promise<number>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  retrieveDTI(overrides?: CallOverrides): Promise<BigNumber>;

  retrieveLTV(overrides?: CallOverrides): Promise<number>;

  retrieveRate(overrides?: CallOverrides): Promise<number>;

  retrieveTotalAllowableFunds(overrides?: CallOverrides): Promise<BigNumber>;

  retrieveTotalLoansDisbursed(overrides?: CallOverrides): Promise<BigNumber>;

  retrieveTotalPreApprovedLoans(overrides?: CallOverrides): Promise<BigNumber>;

  s_LTV(overrides?: CallOverrides): Promise<number>;

  totalAllowableFunds(overrides?: CallOverrides): Promise<BigNumber>;

  totalLoansDisbursed(overrides?: CallOverrides): Promise<BigNumber>;

  totalPreApprovedLoans(overrides?: CallOverrides): Promise<BigNumber>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateDTI(
    _newDTI: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateLTV(
    _newLTV: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateRate(
    _newrateOfInterest: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateTotalAllowableFunds(
    _newTotalAllowableFunds: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateTotalLoansDisbursed(
    _newTotalLoansDisbursed: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateTotalPreApprovedLoans(
    _newTotalPreApprovedLoans: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    DTI(overrides?: CallOverrides): Promise<BigNumber>;

    changeDeployer(
      _newDeployer: string,
      overrides?: CallOverrides
    ): Promise<void>;

    deployer(overrides?: CallOverrides): Promise<string>;

    name(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    rateOfInterest(overrides?: CallOverrides): Promise<number>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    retrieveDTI(overrides?: CallOverrides): Promise<BigNumber>;

    retrieveLTV(overrides?: CallOverrides): Promise<number>;

    retrieveRate(overrides?: CallOverrides): Promise<number>;

    retrieveTotalAllowableFunds(overrides?: CallOverrides): Promise<BigNumber>;

    retrieveTotalLoansDisbursed(overrides?: CallOverrides): Promise<BigNumber>;

    retrieveTotalPreApprovedLoans(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    s_LTV(overrides?: CallOverrides): Promise<number>;

    totalAllowableFunds(overrides?: CallOverrides): Promise<BigNumber>;

    totalLoansDisbursed(overrides?: CallOverrides): Promise<BigNumber>;

    totalPreApprovedLoans(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateDTI(_newDTI: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateLTV(_newLTV: BigNumberish, overrides?: CallOverrides): Promise<void>;

    updateRate(
      _newrateOfInterest: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateTotalAllowableFunds(
      _newTotalAllowableFunds: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateTotalLoansDisbursed(
      _newTotalLoansDisbursed: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateTotalPreApprovedLoans(
      _newTotalPreApprovedLoans: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "DTIChanged(uint64,uint64)"(
      newDTI?: null,
      oldDTI?: null
    ): DTIChangedEventFilter;
    DTIChanged(newDTI?: null, oldDTI?: null): DTIChangedEventFilter;

    "DeployerChanged(address,address)"(
      previousDeployer?: string | null,
      newDeployer?: string | null
    ): DeployerChangedEventFilter;
    DeployerChanged(
      previousDeployer?: string | null,
      newDeployer?: string | null
    ): DeployerChangedEventFilter;

    "LTVChanged(uint32,uint32)"(
      newLTI?: null,
      oldLTI?: null
    ): LTVChangedEventFilter;
    LTVChanged(newLTI?: null, oldLTI?: null): LTVChangedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;

    "RateChanged(uint32,uint32)"(
      _newrateOfInterest?: null,
      oldrateOfInterest?: null
    ): RateChangedEventFilter;
    RateChanged(
      _newrateOfInterest?: null,
      oldrateOfInterest?: null
    ): RateChangedEventFilter;
  };

  estimateGas: {
    DTI(overrides?: CallOverrides): Promise<BigNumber>;

    changeDeployer(
      _newDeployer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    deployer(overrides?: CallOverrides): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    rateOfInterest(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    retrieveDTI(overrides?: CallOverrides): Promise<BigNumber>;

    retrieveLTV(overrides?: CallOverrides): Promise<BigNumber>;

    retrieveRate(overrides?: CallOverrides): Promise<BigNumber>;

    retrieveTotalAllowableFunds(overrides?: CallOverrides): Promise<BigNumber>;

    retrieveTotalLoansDisbursed(overrides?: CallOverrides): Promise<BigNumber>;

    retrieveTotalPreApprovedLoans(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    s_LTV(overrides?: CallOverrides): Promise<BigNumber>;

    totalAllowableFunds(overrides?: CallOverrides): Promise<BigNumber>;

    totalLoansDisbursed(overrides?: CallOverrides): Promise<BigNumber>;

    totalPreApprovedLoans(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateDTI(
      _newDTI: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateLTV(
      _newLTV: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateRate(
      _newrateOfInterest: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateTotalAllowableFunds(
      _newTotalAllowableFunds: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateTotalLoansDisbursed(
      _newTotalLoansDisbursed: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateTotalPreApprovedLoans(
      _newTotalPreApprovedLoans: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DTI(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    changeDeployer(
      _newDeployer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    deployer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rateOfInterest(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    retrieveDTI(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    retrieveLTV(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    retrieveRate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    retrieveTotalAllowableFunds(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    retrieveTotalLoansDisbursed(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    retrieveTotalPreApprovedLoans(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    s_LTV(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalAllowableFunds(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalLoansDisbursed(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalPreApprovedLoans(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateDTI(
      _newDTI: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateLTV(
      _newLTV: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateRate(
      _newrateOfInterest: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateTotalAllowableFunds(
      _newTotalAllowableFunds: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateTotalLoansDisbursed(
      _newTotalLoansDisbursed: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateTotalPreApprovedLoans(
      _newTotalPreApprovedLoans: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
